!function(t,i){"object"==typeof exports&&"object"==typeof module?module.exports=i():"function"==typeof define&&define.amd?define([],i):"object"==typeof exports?exports.RayCaster=i():t.RayCaster=i()}(self,(()=>(()=>{"use strict";var t={d:(i,s)=>{for(var e in s)t.o(s,e)&&!t.o(i,e)&&Object.defineProperty(i,e,{enumerable:!0,get:s[e]})},o:(t,i)=>Object.prototype.hasOwnProperty.call(t,i),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},i={};t.r(i),t.d(i,{createCamera:()=>y,createSkyBox:()=>w,createSprite:()=>c,createTextureMap:()=>f,createWorld:()=>u,initKeyboardControl:()=>M,initMouseControl:()=>g,initPointerLockControl:()=>O});const s=class{constructor(t,i,s,e,o=0,h=0,r=0,a=null){if(this.pos={x:i.x,y:i.y},this.ang=o,this.src=t,this.width=s,this.height=e,this.pInst=a,this.yAdjustment=h,this.animationGap=r,this.buffer=null,null!==this.pInst)this.buffer=this.pInst.createGraphics(this.width,this.height);else{if(!window.createGraphics)throw new Error("p5 is not found!");this.buffer=window.createGraphics(this.width,this.height)}this.animationFrames=Math.floor(this.src.height/this.height),this.animationGroups=[];let l=[];for(let t=0;t<this.animationFrames;t++)l.push(t);this.animationGroups.push(l),this.rotationFrames=Math.floor(this.src.width/this.width),this.currentRotation=0,this.currentAnimation=0,this.currentAnimationGroup=0,this.currentAnimationIdx=0,this.rotationFrames>1&&(this.rotationDivision=2*Math.PI/this.rotationFrames,this.updateRotationFrame(Math.PI)),this.drawBuffer()}setAnimationGap(t){this.animationGap=t}setAnimationGroups(t){this.animationGroups=t}setCurrentAnimationGroup(t){this.animationGroups&&t>-1&&t<this.animationGroups.length&&(this.currentAnimationGroup=t,this.currentAnimationIdx=0,this.currentAnimation=this.animationGroups[this.currentAnimationGroup][this.currentAnimationIdx])}setYAdjustment(t){this.yAdjustment=t}update(t){this.animationGap<=0||1===this.animationFrames||t%this.animationGap==0&&this.nextAnimationFrame()}nextAnimationFrame(){this.currentAnimationIdx++,this.currentAnimationIdx=this.currentAnimationIdx%this.animationGroups[this.currentAnimationGroup].length,this.currentAnimation=this.animationGroups[this.currentAnimationGroup][this.currentAnimationIdx],this.drawBuffer()}updateAnimationFrame(t){if(this.currentAnimation!==t){let i,s;this.currentAnimation=t,this.animationGroups.forEach(((t,e)=>{let o=t.indexOf(this.currentAnimation);o>-1&&(i=e,s=o)})),this.currentAnimationGroup=i,this.currentAnimationIdx=s,this.drawBuffer()}}updateRotationFrame(t){let i,s;if(1===this.rotationFrames)s=0;else{for(i=t-this.ang+this.rotationDivision/2;i<0;)i+=2*Math.PI;for(;i>2*Math.PI;)i-=2*Math.PI;s=Math.floor(i/this.rotationDivision)}this.currentRotation!==s&&(this.currentRotation=s,this.drawBuffer())}move(t){if(!this.world)return;let i=Math.floor(this.pos.x+t.x)+Math.floor(this.pos.y)*this.world.width,s=Math.floor(this.pos.x)+Math.floor(this.pos.y+t.y)*this.world.width;this.world.map[i]!==this.world.table.MAP_FLOOR&&this.world.doorStates[i]!==this.world.table.DOOR_OPEN||Math.floor(this.pos.x+t.x)>-1&&Math.floor(this.pos.x+t.x)<this.world.width&&(this.pos.x+=t.x),this.world.map[s]!==this.world.table.MAP_FLOOR&&this.world.doorStates[s]!==this.world.table.DOOR_OPEN||Math.floor(this.pos.y+t.y)>-1&&Math.floor(this.pos.y+t.y)<this.world.height&&(this.pos.x+=t.y)}rotate(t){this.ang+=t}rotateTo(t){this.ang=t}drawBuffer(){this.buffer.clear(),this.buffer.image(this.src,0,0,this.width,this.height,this.currentRotation*this.width,this.currentAnimation*this.height,this.width,this.height)}destroy(){this.drawBuffer.remove()}};class e{static defaultTypeTable={MAP_FLOOR:0,MAP_WALL:1,MAP_WALL_SHADOW:2,MAP_DOOR:3,MAP_DOOR_FRAME:4,MAP_PUSH_WALL:5,MAP_CIRCULAR_COLUMN:6,MAP_DIA_WALL_TR_BL:7,MAP_DIA_WALL_TL_BR:8,MAP_TRANSPARENT_WALL:9,DOOR_CLOSED:0,DOOR_OPENING:1,DOOR_OPEN:2,DOOR_CLOSING:3};static defaultSkyBox={sky:"black",ground:"grey",front:null,middle:null,back:null};constructor(t=24,i=24,s=null,o=null,h=e.defaultSkyBox,r=e.defaultTypeTable,a=null){this.width=t,this.height=i,this.map=new Array(this.width*this.height).fill(0),this.table=r,this.skyBox=h,this.sprites=[],this.cameras=[],this.textureMap=o,this.loadMap(s,a)}loadMap(t,i){if(t&&t.length)if("string"==typeof t)t.split(",").forEach(((t,i)=>{this.map[i]=parseInt(t),this.map[i]%10===this.table.MAP_WALL_SHADOW&&(console.warn(`[p5RayCaster]: MAP_WALL_SHADOW ${this.map[i]} should not be used in the map, changed to MAP_WALL ${Math.floor(this.map[i]/10)+this.table.MAP_WALL}`),this.map[i]=Math.floor(this.map[i]/10)+this.table.MAP_WALL)}));else if("number"==typeof t[0])t.forEach(((t,i)=>{this.map[i]=t,this.map[i]%10===this.table.MAP_WALL_SHADOW&&(console.warn(`[p5RayCaster]: MAP_WALL_SHADOW ${this.map[i]} should not be used in the map, changed to MAP_WALL ${Math.floor(this.map[i]/10)+this.table.MAP_WALL}`),this.map[i]=Math.floor(this.map[i]/10)+this.table.MAP_WALL)}));else if("number"==typeof t[0][0])for(let i=0;i<t.length;i++)for(let s=0;s<t[i].length;s++){let e=s+i*this.width;this.map[e]=t[i][s],this.map[e]%10===this.table.MAP_WALL_SHADOW&&(console.warn(`[p5RayCaster]: MAP_WALL_SHADOW ${this.map[e]} should not be used in the map, changed to MAP_WALL ${Math.floor(this.map[e]/10)+this.table.MAP_WALL}`),this.map[e]=Math.floor(this.map[e]/10)+this.table.MAP_WALL)}this.doorOffsets=new Array(this.width*this.height).fill(0),this.doorStates=new Array(this.width*this.height).fill(0),this.doorSpeed=i&&i.doorSpeed?i.doorSpeed:.1,this.doorAutoClose=!(!i||!i.doorAutoClose)&&i.doorAutoClose,this.doorClosingTime=i&&i.doorClosingTime?i.doorClosingTime:0}loadTextureMap(t){this.textureMap=t}addSprite(t){this.sprites.push(t),t.world=this,this.cameras.forEach((t=>{t.updateSpritesBuffers()}))}removeSprite(t){if(t instanceof s){delete t.world;let i=this.sprites.indexOf(t);if(-1===i)return void console.warn("invalid remove: sprite is not in the world");t=i}delete this.sprites[t].world,this.sprites.splice(t,1),this.cameras.forEach((t=>{t.updateSpritesBuffers()}))}update(t=30){const i=1/t;for(let t=0;t<this.map.length;t++){const s=this.map[t];s===this.table.MAP_DOOR?this.doorStates[t]===this.table.DOOR_OPENING?(this.doorOffsets[t]+=i*this.doorSpeed,this.doorOffsets[t]>1&&(this.doorOffsets[t]=1,this.doorStates[t]=this.table.DOOR_OPEN,this.doorAutoClose&&setTimeout((t=>{this.doorStates[t]=this.table.DOOR_CLOSING}),this.doorClosingTime,t))):this.doorStates[t]===this.table.DOOR_CLOSING&&(this.doorOffsets[t]-=i*this.doorSpeed,this.doorOffsets[t]<0&&(this.doorOffsets[t]=0,this.doorStates[t]=this.table.DOOR_CLOSED)):s===this.table.MAP_PUSH_WALL&&this.doorStates[t]===this.table.DOOR_OPENING&&(this.doorOffsets[t]+=i*this.doorSpeed,this.doorOffsets[t]>1&&(this.doorOffsets[t]=1,this.doorStates[t]=this.table.DOOR_OPEN))}}openDoor(t,i){let s=1===arguments.length?t:t+i*this.width;this.map[s]!==this.table.MAP_DOOR&&this.map[s]!==this.table.MAP_PUSH_WALL||this.doorStates[s]===this.table.DOOR_CLOSED&&(this.doorStates[s]=this.table.DOOR_OPENING)}closeDoor(t,i){let s=1===arguments.length?t:t+i*this.width;this.map[s]===this.table.MAP_DOOR&&this.doorStates[s]===this.table.DOOR_OPEN&&(this.doorStates[s]=this.table.DOOR_CLOSING)}moveDoor(t,i){let s=1===arguments.length?t:t+i*this.width;this.map[s]===this.table.MAP_DOOR&&(this.doorStates[s]===this.table.DOOR_OPEN?this.doorStates[s]=this.table.DOOR_CLOSING:this.doorStates[s]===this.table.DOOR_CLOSED&&(this.doorStates[s]=this.table.DOOR_OPENING)),this.map[s]===this.table.MAP_PUSH_WALL&&this.doorStates[s]===this.table.DOOR_CLOSED&&(this.doorStates[s]=this.table.DOOR_OPENING)}}const o=e,h=class{constructor(t,i,s,e,o,h){this.mapX=i,this.mapY=s,this.camera=t,this.side=e,this.screenX=[o],this.tex=h}getRayDir(t,i,s){return s||(s=this.camera.cameraXCoords),1===i?this.camera.dir.y+this.camera.plane.y*s[t]:this.camera.dir.x+this.camera.plane.x*s[t]}getPerpDist(t){let i=1,s=this.getRayDir(t,this.side);return s<0&&(i=-1),1===this.side?(this.mapY-this.camera.pos.y+.5*i+(1-i)/2)/s:(this.mapX-this.camera.pos.x+.5*i+(1-i)/2)/s}display(t,i){const s=t._isMainCanvas?t._pInst:t,e=this.camera.world.textureMap.get(this.tex);s.push(),s.drawingContext.globalAlpha=.5;for(let o=this.screenX[0];o<this.screenX[0]+this.screenX.length;o++){let h,r=this.getPerpDist(o),a=Math.round(t.height/r),l=(.5+i)*t.height-a/2;if(0===this.side?h=this.camera.pos.y+r*this.getRayDir(o,1):1===this.side&&(h=this.camera.pos.x+r*this.getRayDir(o,0)),h-=Math.floor(h),"string"==typeof e)s.stroke(e),s.line(o,l,o,l+a);else{let t=Math.floor(h*e.width);s.image(e,o,l,1,a,t,0,1,e.height)}}s.pop()}},r=class{static lineIntersection(t,i,s,e,o=!1){let h=i.y-t.y,r=t.x-i.x,a=h*t.x+r*t.y,l=e.y-s.y,n=s.x-e.x,d=l*s.x+n*s.y,p=h*n-l*r;if(0===p)return null;let m=(n*a-r*d)/p,f=(h*d-l*a)/p;if(o){let s=(m-t.x)/(i.x-t.x),e=(f-t.y)/(i.y-t.y);return s>=0&&s<=1||e>=0&&e<=1?{x:m,y:f}:null}return{x:m,y:f}}static lineCircleIntersection(t,i,s,e,o=!1){let h,r,a,l,n={x:0,y:0};if(n.x=i.x-t.x,n.y=i.y-t.y,h=n.x*n.x+n.y*n.y,r=2*(n.x*(t.x-s.x)+n.y*(t.y-s.y)),a=s.x*s.x+s.y*s.y,a+=t.x*t.x+t.y*t.y,a-=2*(s.x*t.x+s.y*t.y),a-=e*e,l=r*r-4*h*a,l<0)return null;if(o)return{b:(-r-Math.sqrt(l))/(2*h)};let d=(-r+sqrt(l))/(2*h),p=(-r-sqrt(l))/(2*h);return[{x:t.x+d*(i.x-t.x),y:t.y+d*(i.y-t.y)},{x:t.x+p*(i.x-t.x),y:t.y+p*(i.y-t.y)}]}static rotateVector(t,i){return{x:t.x*Math.cos(i)-t.y*Math.sin(i),y:t.x*Math.sin(i)+t.y*Math.cos(i)}}static combineSort(t,i,s){let e=s,o=!1;for(;e>1||o;){e=Math.floor(10*e/13),9!=e&&10!=e||(e=11),e<1&&(e=1),o=!1;for(let h=0;h<s-e;h++){let s=h+e;i[h]<i[s]&&([i[h],i[s]]=[i[s],i[h]],[t[h],t[s]]=[t[s],t[h]],o=!0)}}}static normalize(t){let i=t.x*t.x+t.y*t.y;return 1===i?{x:t.x,y:t.y}:{x:t.x/Math.sqrt(i),y:t.y/Math.sqrt(i)}}};class a{static defaultMiniMapOptions={border:{stroke:"white",strokeWeight:3},background:{fill:"grey"},sprite:{fill:"purple",stroke:void 0,strokeWeight:0,dia:.5},camera:{fill:"yellow",stroke:void 0,strokeWeight:0,dia:.5},fov:{stroke:"black",strokeWeight:1},blocks:new Map([[0,{}],[1,{fill:"red"}],[3,{fill:"blue"}],[4,{fill:"blue"}],[5,{fill:"red",stroke:"blue",strokeWeight:1}],[6,{fill:"cyan"}],[7,{stroke:"red",strokeWeight:3}],[8,{stroke:"red",strokeWeight:3}],[9,{fill:"rgba(255,0,0,0.25)"}]]),MAP_FLOOR:{fill:void 0,stroke:void 0,strokeWeight:0},MAP_WALL:{fill:"red",stroke:void 0,strokeWeight:0},MAP_DOOR:{fill:"blue",stroke:void 0,strokeWeight:0},MAP_DOOR_FRAME:{fill:"black",stroke:"blue",strokeWeight:2},MAP_PUSH_WALL:{fill:"red",stroke:"blue",strokeWeight:1},MAP_CIRCULAR_COLUMN:{fill:"cyan",stroke:void 0,strokeWeight:0},MAP_DIA_WALL_TR_BL:{fill:void 0,stroke:"red",strokeWeight:3},MAP_DIA_WALL_TL_BR:{fill:void 0,stroke:"red",strokeWeight:3},MAP_TRANSPARENT_WALL:{fill:"rgba(255,0,0,0.25)",stroke:void 0,strokeWeight:0}};constructor(t,i,s,e=null,o=null){if(this.fov=s,this.pos={x:t.x,y:t.y},this.dir=r.normalize(i),this.tilting=0,this.tiltingRange=[-Math.PI/4,Math.PI/4],this.plane=r.rotateVector(this.dir,-Math.PI/2),this.plane.x=this.plane.x*s,this.plane.y=this.plane.y*s,this.attachToWorld(e),this.canvas=o,null!==this.canvas){this.cameraXCoords=[];for(let t=0;t<this.canvas.width;t++)this.cameraXCoords.push(2*t/this.canvas.width-1)}this.zBuffer=o?new Array(o.width):[],this.spritesOrderBuffer=[],this.spritesDistanceBuffer=[],this.spritesUpdateGap=4,null!==e&&this.updateSpritesBuffers(),this.miniMapOptions=a.defaultMiniMapOptions}attachToWorld(t){this.world=t,null!==t&&t.cameras.push(this)}removeFromWorld(){this.world.camera.splice(this.world.cameras.indexOf(this),1),this.world=null}updateSpritesBuffers(){if(null===this.world||this.world.sprites.length<1)return;const t=this.world.sprites;for(let i=0;i<t.length;i++)this.spritesOrderBuffer[i]=i,this.spritesDistanceBuffer[i]=(this.pos.x-t[i].pos.x)*(this.pos.x-t[i].pos.x)+(this.pos.y-t[i].pos.y)*(this.pos.y-t[i].pos.y);r.combineSort(this.spritesOrderBuffer,this.spritesDistanceBuffer,t.length)}setMiniMapRenderOptions(t){this.miniMapOptions=t}teleportTo(t,i,s=null){this.pos.x=t.x,this.pos.y=t.y,i&&(i=r.normalize(i),this.dir.x=i.x,this.dir.y=i.y,this.plane=r.rotateVector(this.dir,-Math.PI/2),this.plane.x=this.plane.x*this.fov,this.plane.y=this.plane.y*this.fov),s&&null!==s&&(this.removeFromWorld(),this.attachToWorld(s))}move(t){if(null===this.world)throw new Error("world should be set before manipulating camera");let i=Math.floor(this.pos.x+t.x)+Math.floor(this.pos.y)*this.world.width,s=Math.floor(this.pos.x)+Math.floor(this.pos.y+t.y)*this.world.width;this.world.map[i]!==this.world.table.MAP_FLOOR&&this.world.doorStates[i]!==this.world.table.DOOR_OPEN||Math.floor(this.pos.x+t.x)>-1&&Math.floor(this.pos.x+t.x)<this.world.width&&(this.pos.x+=t.x),this.world.map[s]!==this.world.table.MAP_FLOOR&&this.world.doorStates[s]!==this.world.table.DOOR_OPEN||Math.floor(this.pos.y+t.y)>-1&&Math.floor(this.pos.y+t.y)<this.world.height&&(this.pos.y+=t.y)}rotate(t){this.dir=r.rotateVector(this.dir,t),this.plane=r.rotateVector(this.plane,t)}tilt(t){this.tilting+=t,this.tilting>this.tiltingRange[1]&&(this.tilting=this.tiltingRange[1]),this.tilting<this.tiltingRange[0]&&(this.tilting=this.tiltingRange[0])}updateTiltingRange(t,i){this.tiltingRange[0]=t,this.tiltingRange[1]=i}openDoor(){let t=Math.floor(this.pos.x+this.dir.x),i=Math.floor(this.pos.y+this.dir.y),s=Math.floor(this.pos.x+2*this.dir.x),e=Math.floor(this.pos.y+2*this.dir.y),o=t+i*this.world.width,h=s+e*this.world.width;this.world.openDoor(o),this.world.openDoor(h);let r=Math.floor(this.pos.x)+Math.floor(this.pos.y)*this.world.width;this.world.map[r]===this.world.table.MAP_DOOR&&(this.world.doorStates[r]=this.world.table.DOOR_OPENING)}closeDoor(){let t=Math.floor(this.pos.x+this.dir.x),i=Math.floor(this.pos.y+this.dir.y),s=Math.floor(this.pos.x+2*this.dir.x),e=Math.floor(this.pos.y+2*this.dir.y),o=t+i*this.world.width,h=s+e*this.world.width;this.world.closeDoor(o),this.world.closeDoor(h);let r=Math.floor(this.pos.x)+Math.floor(this.pos.y)*this.world.width;this.world.map[r]===this.world.table.MAP_DOOR&&(this.world.doorStates[r]=this.world.table.DOOR_OPENING)}moveDoor(){let t=Math.floor(this.pos.x+this.dir.x),i=Math.floor(this.pos.y+this.dir.y),s=Math.floor(this.pos.x+2*this.dir.x),e=Math.floor(this.pos.y+2*this.dir.y),o=t+i*this.world.width,h=s+e*this.world.width;this.world.moveDoor(o),this.world.moveDoor(h);let r=Math.floor(this.pos.x)+Math.floor(this.pos.y)*this.world.width;this.world.map[r]===this.world.table.MAP_DOOR&&(this.world.doorStates[r]=this.world.table.DOOR_OPENING)}renderMiniMap(t,i,s,e,o,h=this.canvas){const r=h._isMainCanvas?h._pInst:h;let a=Math.floor(this.pos.x),l=Math.floor(this.pos.y),n={x:e/(2*t.x+1),y:o/(2*t.y+1)};r.push(),r.fill(this.miniMapOptions.background.fill),r.rect(i,s,e,o);for(let o=0;o<2*t.x+1;o++)for(let h=0;h<2*t.y+1;h++){let d=a-t.x+o,p=l-t.y+h;if(d<0||d>this.world.width-1||p<0||p>this.world.height-1)continue;let m=d+p*this.world.width,f=i+e-(o+1)*n.x,w=s+h*n.y;if(this.miniMapOptions.blocks.has(this.world.map[m])){let t=this.miniMapOptions.blocks.get(this.world.map[m]);if(t.icon)r.image(t.icon,f,w,n.x,n.y);else switch(t.fill?r.fill(t.fill):r.noFill(),t.stroke?(r.stroke(t.stroke),t.strokeWeight&&r.strokeWeight(t.strokeWeight)):r.noStroke(),this.world.map[m]%10){default:r.rect(f,w,n.x,n.y);break;case this.world.table.MAP_DIA_WALL_TR_BL:r.line(f,w,f+n.x,w+n.y);break;case this.world.table.MAP_DIA_WALL_TL_BR:r.line(f+n.x,w,f,w+n.y);break;case this.world.table.MAP_CIRCULAR_COLUMN:r.ellipse(f+n.x/2,w+n.y/2,n.x,n.y)}}else{let t;switch(this.world.map[m]%10){case this.world.table.MAP_FLOOR:t=this.miniMapOptions.MAP_FLOOR;break;case this.world.table.MAP_WALL:case this.world.table.MAP_WALL_SHADOW:t=this.miniMapOptions.MAP_WALL;break;case this.world.table.MAP_DOOR:t=this.miniMapOptions.MAP_DOOR;break;case this.world.table.MAP_DOOR_FRAME:t=this.miniMapOptions.MAP_DOOR_FRAME;break;case this.world.table.MAP_PUSH_WALL:t=this.miniMapOptions.MAP_PUSH_WALL;break;case this.world.table.MAP_CIRCULAR_COLUMN:t=this.miniMapOptions.MAP_CIRCULAR_COLUMN;break;case this.world.table.MAP_DIA_WALL_TR_BL:t=this.miniMapOptions.MAP_DIA_WALL_TR_BL;break;case this.world.table.MAP_DIA_WALL_TL_BR:t=this.miniMapOptions.MAP_DIA_WALL_TL_BR;break;case this.world.table.MAP_TRANSPARENT_WALL:t=this.miniMapOptions.MAP_TRANSPARENT_WALL}if(t.icon)r.image(t.icon,f,w,n.x,n.y);else switch(t.fill?r.fill(t.fill):r.noFill(),t.stroke?(r.stroke(t.stroke),t.strokeWeight&&r.strokeWeight(t.strokeWeight)):r.noStroke(),this.world.map[m]%10){default:r.rect(f,w,n.x,n.y);break;case this.world.table.MAP_DIA_WALL_TR_BL:r.line(f,w,f+n.x,w+n.y);break;case this.world.table.MAP_DIA_WALL_TL_BR:r.line(f+n.x,w,f,w+n.y);break;case this.world.table.MAP_CIRCULAR_COLUMN:r.ellipse(f+n.x/2,w+n.y/2,n.x,n.y)}}}let d=i+e-(this.pos.x-Math.floor(this.pos.x)+t.x)*n.x,p=s+(this.pos.y-Math.floor(this.pos.y)+t.y)*n.y;this.miniMapOptions.camera.fill?r.fill(this.miniMapOptions.camera.fill):r.noFill(),this.miniMapOptions.camera.stroke?(r.stroke(this.miniMapOptions.camera.stroke),this.miniMapOptions.camera.strokeWeight&&r.strokeWeight(this.miniMapOptions.camera.strokeWeight)):r.noStroke(),r.ellipse(d,p,this.miniMapOptions.camera.dia*n.x,this.miniMapOptions.camera.dia*n.y),this.miniMapOptions.fov.stroke&&(r.stroke(this.miniMapOptions.fov.stroke),this.miniMapOptions.fov.strokeWeight&&r.strokeWeight(this.miniMapOptions.fov.strokeWeight),r.line(d,p,d-(this.dir.x+this.plane.x)*n.x,p+(this.dir.y+this.plane.y)*n.y),r.line(d,p,d-(this.dir.x-this.plane.x)*n.x,p+(this.dir.y-this.plane.y)*n.y)),this.miniMapOptions.sprite.fill?r.fill(this.miniMapOptions.sprite.fill):r.noFill(),this.miniMapOptions.sprite.stroke?(r.stroke(this.miniMapOptions.sprite.stroke),this.miniMapOptions.sprite.strokeWeight&&r.strokeWeight(this.miniMapOptions.sprite.strokeWeight)):r.noStroke(),this.world.sprites.forEach((o=>{if(o.pos.x>a-t.x&&o.pos.x<a+t.x&&o.pos.y>l-t.y&&o.pos.y<l+t.y){let h=i+e-(o.pos.x-(a-t.x))*n.x,d=s+(o.pos.y-(l-t.y))*n.y;r.ellipse(h,d,this.miniMapOptions.sprite.dia*n.x,this.miniMapOptions.sprite.dia*n.y)}})),r.pop()}renderSkyBox(t=this.canvas){const i=.5+Math.tan(this.tilting),s=1-i,e=t._isMainCanvas?t._pInst:t,o=this.world.skyBox;if(e.push(),"string"==typeof o.sky)e.fill(o.sky),e.noStroke(),e.rect(0,0,e.width,e.height*i);else{let t=o.sky;e.image(t,0,0,e.width,e.height*i,0,t.height-e.height*i,e.width,e.height*i)}if(o.back||o.front||o.middle){let t=this.world.width/2-this.pos.x,s=this.world.height/2-this.pos.y,h={x:this.world.width/2*this.dir.x+t,y:this.world.height/2*this.dir.y+s},r={x:this.pos.x+h.x,y:this.pos.y+h.y},a=Math.sqrt((r.x-this.pos.x)*(r.x-this.pos.x)+(r.y-this.pos.y)*(r.y-this.pos.y)),l=a+a,n=(Math.atan2(this.dir.y,this.dir.x)+Math.PI)/Math.PI,d=Math.floor(n*e.width),p=Math.floor(d/1.5),m=Math.floor(d/2),f=e.height*i;if(o.back){let t=e.width/2,i=f/2;e.image(o.back,m,i,t,i,0,f-o.back.height,o.back.width,o.back.height),e.image(o.back,m-t,i,t,i,0,f-o.back.height,o.back.width,o.back.height),n>1&&e.image(o.back,m-e.width,i,t,i,0,f-o.back.height,o.back.width,o.back.height),n<1&&e.image(o.background,m+t,i,t,i,0,f-o.background.height,o.background.width,o.background.height)}if(o.middle){let t=e.width/1.5,i=f/1.5,s=f/3-this.world.width+a;e.image(o.middle,p-t,s,t,i,0,f-o.middle.height,o.middle.width,o.middle.height),n<1.5&&e.image(o.middle,p,s,t,i,0,f-o.middle.height,o.middle.width,o.middle.height),n<.5&&e.image(o.middle,p+t,s,t,i,0,f-o.middle.height,o.middle.width,o.middle.height),n>1&&e.image(o.middle,p-2*t,s,t,i,0,f-o.middle.height,o.middle.width,o.middle.height)}o.front&&(e.image(o.front,d-e.width,2*-this.world.width+l,e.width,f,0,f-o.front.height,o.front.width,o.front.height),n<1&&e.image(o.front,d,2*-this.world.width+l,e.width,f,0,f-o.front.height,o.front.width,o.front.height),n>1&&e.image(o.front,d-2*e.width,2*-this.world.width+l,e.width,f,0,f-o.front.height,o.front.width,o.front.height))}if("string"==typeof o.ground)e.fill(o.ground),e.noStroke(),e.rect(0,e.height*i,e.width,e.height*s);else{let t=o.sky;e.image(t,0,e.height*i,e.width,e.height*s,0,t.height-e.height*s,e.width,e.height*s)}e.pop()}renderRayCasting(t=this.canvas,i=!1){const s=t._isMainCanvas?t._pInst:t,e=Math.tan(this.tilting);s.push();let o=[],a=[];if(t===this.canvas)o=this.cameraXCoords;else for(let i=0;i<t.width;i++)o.push(2*i/t.width-1);for(let i=0;i<t.width;i++){let u,c,y,M,g,O,x,A,_={x:this.dir.x+this.plane.x*o[i],y:this.dir.y+this.plane.y*o[i]},b=Math.floor(this.pos.x),k=Math.floor(this.pos.y),L=Math.abs(1/_.x),P=Math.abs(1/_.y),D=0,R={x:0,y:0};for(_.x<0?(M=-1,u=(this.pos.x-b)*L):(M=1,u=(b+1-this.pos.x)*L),_.y<0?(g=-1,c=(this.pos.y-k)*P):(g=1,c=(k+1-this.pos.y)*P);0===D&&(u<c?(u+=L,b+=M,O=0):(c+=P,k+=g,O=1),!(b<0||b>this.world.width||k<0||k>this.world.height));){let t=b+k*this.world.width;var l;if(x=this.world.map[t],x!==this.world.table.MAP_FLOOR)switch(x%10){case this.world.table.MAP_DOOR:this.world.doorStates[t]!==this.world.table.DOOR_OPEN&&(D=1,1==O?(R.y=.5*g,y=(k-this.pos.y+R.y+(1-g)/2)/_.y,l=this.pos.x+y*_.x,l-=Math.floor(l),c-P/2<u?1-l<=this.world.doorOffsets[t]&&(D=0,R.y=0):(b+=M,t=b+k*this.world.width,O=0,x=Math.floor(x/10)+this.world.table.MAP_DOOR_FRAME,R.y=0)):(R.x=.5*M,y=(b-this.pos.x+R.x+(1-M)/2)/_.x,l=this.pos.y+y*_.y,l-=Math.floor(l),u-L/2<c?1-l<this.world.doorStates[t]&&(D=0,R.x=0):(k+=g,t=b+k*this.world.width,O=1,x=Math.floor(x/10)+this.world.table.MAP_DOOR_FRAME,R=0)));break;case this.world.table.MAP_PUSH_WALL:this.world.doorStates[t]!==this.world.table.DOOR_OPEN&&(1==O&&c-P*(1-this.world.doorOffsets[t])<u?(D=1,R.y=this.world.doorOffsets[t]*g):0==O&&u-L*(1-this.world.doorOffsets[t])<c&&(D=1,R.x=this.world.doorOffsets[t]*M));break;case this.world.table.MAP_CIRCULAR_COLUMN:let s=r.lineCircleIntersection({x:this.pos.x,y:this.pos.y},{x:this.pos.x+_.x,y:this.pos.y+_.y},{x:b+.5,y:k+.5},.5,!0);if(s){D=1,O=3;let t={x:this.pos.x+_.x*s.b,y:this.pos.y+_.y*s.b};y=(t.x-this.pos.x+t.y-this.pos.y)/2/((_.x+_.y)/2),l=Math.atan2(k+.5-t.y,b+.5-t.x)/(2*Math.PI),l+=l}break;case this.world.table.MAP_DIA_WALL_TR_BL:var n=b,d=k+1,p=b+1,m=k,f=r.lineIntersection({x:this.pos.x,y:this.pos.y},{x:this.pos.x+_.x,y:this.pos.y+_.y},{x:n,y:d},{x:p,y:m},!1);f&&f.x>=b&&f.x<=b+1&&f.y>=k&&f.y<=k+1&&((1==O&&g<0||0==O&&M<0)&&(A=1),D=1,O=2,y=(f.x-this.pos.x+f.y-this.pos.y)/2/((_.x+_.y)/2));break;case this.world.table.MAP_DIA_WALL_TL_BR:n=b,d=k,p=b+1,m=k+1,(f=r.lineIntersection({x:this.pos.x,y:this.pos.y},{x:this.pos.x+_.x,y:this.pos.y+_.y},{x:n,y:d},{x:p,y:m},!1))&&f.x>=b&&f.x<=b+1&&f.y>=k&&f.y<=k+1&&((1==O&&g>0||0==O&&M<0)&&(A=1),D=1,O=2,y=(f.x-this.pos.x+f.y-this.pos.y)/2/((_.x+_.y)/2));break;case this.world.table.MAP_TRANSPARENT_WALL:if(1==O){if(c-P/2<u){let t=!1;for(let s=0;s<a.length;s++)if(a[s].mapX===b&&a[s].mapY===k){a[s].screenX.push(i),t=!0;break}t||a.push(new h(this,b,k,O,i,x))}}else if(u-L/2<c){let t=!1;for(let s=0;s<a.length;s++)if(a[s].mapX===b&&a[s].mapY===k){a[s].screenX.push(i),t=!0;break}t||a.push(new h(this,b,k,O,i,x))}break;case this.world.table.MAP_WALL_SHADOW:x=1===O&&this.world.map[b+(k-g)*this.world.width]===this.world.table.MAP_DOOR?Math.floor(this.world.map[b+(k-g)*this.world.width]/10)+this.world.table.MAP_DOOR_FRAME:0===O&&this.world.map[b-M+k*this.world.width]===this.world.table.MAP_DOOR?Math.floor(this.world.map[b-M+k*this.world.width]/10)+this.world.table.MAP_DOOR_FRAME:10*Math.floor(x/10)+this.world.table.MAP_WALL,D=1;break;default:1===O&&this.world.map[b+(k-g)*this.world.width]===this.world.table.MAP_DOOR?x=Math.floor(this.world.map[b+(k-g)*this.world.width]/10)+this.world.table.MAP_DOOR_FRAME:0===O&&this.world.map[b-M+k*this.world.width]===this.world.table.MAP_DOOR&&(x=Math.floor(this.world.map[b-M+k*this.world.width]/10)+this.world.table.MAP_DOOR_FRAME),D=1}}if(0===D);else{0===O?y=(b-this.pos.x+R.x+(1-M)/2)/_.x:1===O&&(y=(k-this.pos.y+R.y+(1-g)/2)/_.y);let o=Math.round(t.height/y),h=(.5+e)*t.height-o/2,r=h+o;0===O?l=this.pos.y+y*_.y:1!==O&&2!==O||(l=this.pos.x+y*_.x),l-=Math.floor(l),x%10===this.world.table.MAP_DOOR&&(l+=this.world.doorOffsets[b+b*this.world.width]);let a=this.world.textureMap.get(x);if("string"==typeof a)s.stroke(a),s.line(i,h,i,h+o);else{let t=Math.floor(l*a.width);(0===O&&_.x>0||1===O&&_.y<0)&&(t=a.width-t-1),s.image(a,i,h,1,o,t,0,1,a.height)}if(1===O&&x%10!==this.world.MAP_DOOR){let t=this.world.textureMap.get(10*Math.floor(x/10)+this.world.table.MAP_WALL_SHADOW);if(t)if("string"==typeof t)s.stroke(t),s.line(i,h,i,r);else{let e=Math.floor(l*t.width);_.y<0&&(e=t.width-e-1),s.image(t,i,h,1,o,e,0,1,t.height)}else s.stroke("rgba(0,0,0,0.5)"),s.line(i,h,i,r)}else if(2===O){let t=this.world.textureMap.get(10*Math.floor(x/10)+this.world.table.MAP_WALL_SHADOW);if(t){if(s.push(),w=0===A?.6*l:.6*(1-l),s.drawingContext.globalAlpha=w,"string"==typeof t)s.stroke(t),s.line(i,h,i,r);else{let e=Math.floor(l*t.width);s.image(t,i,h,1,o,e,0,1,t.height)}s.pop()}else{if(0===A)var w=.6*l;else w=.6*(1-l);s.stroke(`rgba(0,0,0,${w})`),s.line(i,h,i,r)}}this.zBuffer[i]=y}}let u=-1;if(a.length>0&&(u=a.length-1),!i){1!==s.frameCount&&s.frameCount%this.spritesUpdateGap!=0||this.updateSpritesBuffers();for(let i=0;i<this.world.sprites.length;i++){const o=this.world.sprites[this.spritesOrderBuffer[i]];let h=o.pos.x-this.pos.x,r=o.pos.y-this.pos.y,l=1/(this.plane.x*this.dir.y-this.dir.x*this.plane.y),n=l*(this.dir.y*h-this.dir.x*r),d=l*(this.plane.x*r-this.plane.y*h);if(d>0){for(;u>=0;u--){let s=(this.pos.x-a[u].mapX)*(this.pos.x-a[u].mapX)+(this.pos.y-a[u].mapY)*(this.pos.y-a[u].mapY);if(!(this.spritesDistanceBuffer[i]<s))break;a[u].display(t,e)}let l=Math.abs(Math.floor(t.height/d)),p=(.5+e-o.yAdjustment)*t.height-l/2,m=Math.floor(t.width/2)*(1+n/d),f=Math.abs(Math.floor(t.height/d)),w=Math.floor(m-f/2),c=w+f,y=w,M=c;w<-f&&(w=-f),c>t.width+f&&(c=t.width+f);for(let t=w;t<c;t++)if(d>this.zBuffer[t]){if(!(t-y<=1)){M=t;break}y=t}if(y!==M&&y<t.width&&M>0){let t=o.width/f,i=Math.floor((y-w)*t);i<0&&(i=0);let e=Math.floor((M-y)*t)+1;e>o.width&&(e=o.width);let a=M-y;a<0&&(a=0);let n=Math.atan2(r,h);o.updateRotationFrame(n),s.push(),s.drawingContext.imageSmoothingEnabled=!1,s.image(o.buffer,y,p,a,l,i,0,e,o.height),s.pop()}}}}for(;u>=0;u--)a[u].display(t,e);a.length=0,s.pop()}renderFrame(t=this.canvas){this.renderSkyBox(t),this.renderRayCasting(t,!1)}}const l=a;class n{static defaultKeyMap={forward:{keys:["w"]},backward:{keys:["s"]},goLeft:{keys:["a"]},goRight:{keys:["d"]},turnLeft:{keys:["q"]},turnRight:{keys:["e"]},tiltUp:{keys:["z"]},tiltDown:{keys:["x"]},moveDoor:{keys:[" "]}};constructor(t=n.defaultKeyMap){this.keyMap=t;for(const i in this.keyMap)Object.hasOwnProperty.call(this.keyMap,i)&&(t[i].initValue?this[i]=t[i].initValue:this[i]=!1);this.regControl()}regControl(){document.addEventListener("keydown",this.keyDown.bind(this)),document.addEventListener("keyup",this.keyUp.bind(this))}removeControl(){document.removeEventListener("keydown",this.keyDown.bind(this)),document.removeEventListener("keyup",this.keyUp.bind(this))}keyDown(t){t.preventDefault();for(const i in this.keyMap)if(Object.hasOwnProperty.call(this.keyMap,i)&&this.keyMap[i].keys.includes(t.key)){const t=this.keyMap[i].toggle,s=this.keyMap[i].initValue;t&&"down"===t?this[i]=!this[i]:t||(this[i]=void 0===s||!s)}}keyUp(t){for(const i in this.keyMap)if(Object.hasOwnProperty.call(this.keyMap,i)&&this.keyMap[i].keys.includes(t.key)){const t=this.keyMap[i].toggle,s=this.keyMap[i].initValue;t&&"up"===t?this[i]=!this[i]:t||(this[i]=void 0!==s&&s)}}loadKeyMap(t){this.keyMap=t}addItem(t,i,s=void 0,e=void 0){this.keyMap[t]={keys:i,toggle:s,initValue:e},this[t]=!1}removeItem(t){this.keyMap.hasOwnProperty(t)&&(delete this.keyMap[t],delete this.name)}}const d=n,p=class{constructor(t=null){this.mouseIsDown=!1,this.mouseX=0,this.mouseY=0,this.pmouseX=0,this.pmouseY=0,this.mouseButton=-1,this.mouseCX=0,this.mouseCY=0,this.pmouseCX=0,this.pmouseCY=0,this.regControl(t)}regControl(t){let i=t||document;this.targetElement=i,i.ownerDocument.addEventListener("mousedown",this.mouseDown.bind(this)),i.ownerDocument.addEventListener("mouseup",this.mouseUp.bind(this)),i.ownerDocument.addEventListener("mousemove",this.mouseMove.bind(this))}removeControl(){this.targetElement.ownerDocument.removeEventListener("mousedown",this.mouseDown.bind(this)),this.targetElement.ownerDocument.removeEventListener("mouseup",this.mouseUp.bind(this)),this.targetElement.ownerDocument.removeEventListener("mousemove",this.mouseMove.bind(this))}mouseDown(t){t.preventDefault(),this.mouseIsDown=!0,this.mouseButton=t.button}mouseMove(t){this.pmouseX=this.mouseX,this.pmouseY=this.mouseY,this.pmouseCX=this.mouseCX,this.pmouseCY=this.mouseCY,this.mouseX=t.offsetX,this.mouseY=t.offsetY,this.mouseCX=t.clientX,this.mouseCY=t.clientY}mouseUp(t){this.mouseIsDown=!1,this.mouseButton=-1}},m=class{constructor(t,i){this.camera=t,this.targetElement=i,this.pointerSpeed=.002,this.pointerLocked=!1,this.mouseIsDown=!1,this.mouseButton=-1,this.invertedX=!1,this.invertedY=!1,this.switchXY=!1,this.regControl()}regControl(){this.targetElement.ownerDocument.addEventListener("mousemove",this.mouseMove.bind(this)),this.targetElement.ownerDocument.addEventListener("pointerlockchange",this.pointerLockChange.bind(this)),this.targetElement.ownerDocument.addEventListener("pointerlockerror",this.pointerLockError.bind(this)),this.targetElement.ownerDocument.addEventListener("mouseup",this.mouseUp.bind(this)),this.targetElement.ownerDocument.addEventListener("mousedown",this.mouseDown.bind(this))}removeControl(){this.targetElement.ownerDocument.removeEventListener("mousemove",this.mouseMove.bind(this)),this.targetElement.ownerDocument.removeEventListener("pointerlockchange",this.pointerLockChange.bind(this)),this.targetElement.ownerDocument.removeEventListener("pointerlockerror",this.pointerLockError.bind(this)),this.targetElement.ownerDocument.removeEventListener("mouseup",this.mouseUp.bind(this)),this.targetElement.ownerDocument.removeEventListener("mousedown",this.mouseDown.bind(this))}lock(){this.targetElement.requestPointerLock()}unlock(){this.targetElement.ownerDocument.exitPointerLock()}setPointerSpeed(t){this.pointerSpeed=t}pointerLockChange(){this.targetElement.ownerDocument.pointerLockElement===this.targetElement?this.pointerLocked=!0:this.pointerLocked=!1}pointerLockError(){console.error("pointerLock unavailable")}mouseMove(t){if(!this.pointerLocked)return;const i=this.camera,s=t.movementX*(this.invertedX?1:-1),e=t.movementY*(this.invertedY?1:-1);i.rotate((this.switchXY?e:s)*this.pointerSpeed),i.tilt((this.switchXY?s:e)*this.pointerSpeed)}mouseDown(t){this.mouseIsDown=!0,this.mouseButton=t.button}mouseUp(t){this.mouseIsDown=!1}};function f(){let t=new Map;for(let i=0;i<arguments.length;i+=2){const s=arguments[i],e=arguments[i+1];t.set(s,e)}return t}function w(t,i,s=null,e=null,o=null){return{sky:t,ground:i,front:s,middle:e,back:o}}function u(t,i,s,e,h,r,a){return new o(t,i,s,e,h,r,a)}function c(t,i,e,o,h,r,a,l){return new s(t,i,e,o,h,r,a,l)}function y(t,i,s,e,o){return new l(t,i,s,e,o)}function M(t){return new d(t)}function g(t){return new p(t)}function O(t,i){return new m(t,i)}return i})()));